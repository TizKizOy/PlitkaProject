const { getAllOrders, getLastOrder } = require("../services/order");

function setupCallbacks(bot) {
  bot.on("callback_query", async (callbackQuery) => {
    const chatId = callbackQuery.message.chat.id;
    const data = callbackQuery.data;

    if (data === "all_orders") {
      const orders = await getAllOrders();
      let message = "üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫:\n\n";
      if (!orders || orders.length === 0) {
        message = "–ù–µ—Ç –∑–∞—è–≤–æ–∫.";
      } else {
        orders.forEach((order, index) => {
          message += `
            –ó–∞—è–≤–∫–∞ ‚Ññ ${index + 1}
            –ò–º—è: ${order.firstName}
            –£—Å–ª—É–≥–∞: ${order.serviceName}
            –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}
            –ú–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ: ${order.location}
          `;
        });
      }
      await bot.sendMessage(chatId, message);
    } else if (data === "last_order") {
      const lastOrder = await getLastOrder();
      if (!lastOrder) {
        await bot.sendMessage(chatId, "–ù–µ—Ç –∑–∞—è–≤–æ–∫.");
      } else {
        const message = `
          üìÑ –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞—è–≤–∫–∞:
          –ò–º—è: ${lastOrder.firstName}
          –£—Å–ª—É–≥–∞: ${lastOrder.serviceName}
          –¢–µ–ª–µ—Ñ–æ–Ω: ${lastOrder.phone}
          –ú–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ: ${lastOrder.location}
        `;
        await bot.sendMessage(chatId, message);
      }
    } else if (data === "help") {
      const helpMessage = `
        ü§ñ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:
        /start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
        /help - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
        /all_orders - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞—è–≤–∫–∏
        /last_order - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞—è–≤–∫—É
      `;
      await bot.sendMessage(chatId, helpMessage);
    }
  });
}

module.exports = { setupCallbacks };
